---
import ComponentDocs from "../../components/ComponentDocs.astro";
import ComponentOption from "../../components/ComponentOption.astro";

const exampleCode = `
<details>
  <summary>Hello World</summary>
  <p>
    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod
    tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
    quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse
    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat
    non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
  </p>
  </details>
`;
---

<ComponentDocs name="Details" exampleCode={exampleCode}>
  <ComponentOption name="Accordion">
    <p slot="details">
      To create an accordion, wrap multiple <code>details</code> elements in an element
      with the class <code>accordion</code>.
    </p>
    <div slot="examples" class="accordion">
      <details>
        <summary>Section 1</summary>
        <p>This is the first section.</p>
      </details>
      <details>
        <summary>Section 2</summary>
        <p>This is the second section.</p>
      </details>
      <details>
        <summary>Section 3</summary>
        <p>This is the third section.</p>
      </details>
    </div>
  </ComponentOption>
  <ComponentOption name="No Width">
    <p slot="details">
      By default, accordions and standalone details elements have a width of <code
        >100%</code
      >. To revert this behavior, use the class <code>no-width</code>.
    </p>
    <details slot="examples" class="no-width">
      <summary>Not full width</summary>
      <p>
        If the content is longer than the title, the details element will get
        wider when opened, which could cause content to shift around.
      </p>
    </details>
  </ComponentOption>
  <ComponentOption name="Subtle">
    <p slot="details">
      You can use a borderless <strong>subtle</strong> variant by adding the <code
        >subtle</code
      > class to either the details element itself or the surrounding accordion wrapper.
    </p>
    <div slot="examples">
      <h4 class="h5">Subtle Details</h4>
      <details class="subtle">
        <summary>Summary</summary>
        Details content
      </details>
      <hr />
      <h4 class="h5">Subtle Accordion</h4>
      <div class="subtle accordion">
        <details>
          <summary>Section 1</summary>
          <p>This is the first section.</p>
        </details>
        <details>
          <summary>Section 2</summary>
          <p>This is the second section.</p>
        </details>
        <details>
          <summary>Section 3</summary>
          <p>This is the third section.</p>
        </details>
      </div>
    </div>
  </ComponentOption>
</ComponentDocs>
