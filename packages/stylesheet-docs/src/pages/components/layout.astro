---
import ComponentDocs from "../../components/ComponentDocs.astro";
import ComponentOption from "../../components/ComponentOption.astro";

const exampleCode = `
<div class="dense horizontal stack">
  <button>1</button>
  <button>2</button>
  <button>3</button>
</div>
`;
---

<ComponentDocs name="Layout (Flex)" exampleCode={exampleCode}>
  <ComponentOption name="Layout Type">
    <Fragment slot="details">
      <p>
        At a minimum, you must include exactly one of the following classes to
        determine which type of layout to apply:
      </p>
      <ul>
        <li>
          <code>flow</code>: children are placed a fixed distance apart,
          wrapping onto new lines as needed.
        </li>
        <li>
          <code>stack</code>: children are placed a fixed distance apart and
          guaranteed to stay on the same line.
        </li>
        <li>
          <code>separate</code>: children are placed as far apart as possible
          while staying on the same line.
        </li>
        <li>
          <code>space</code>: children are placed an even distance apart,
          wrapping onto new lines as needed. Unline flow, the space between
          elements adjusts based on how much is available.
        </li>
      </ul>
    </Fragment>
    <Fragment slot="examples">
      <div class="spacing-example">
        <h3 class="h6">Flow</h3>
        <div class="flow">
          <div class="box">1</div>
          <div class="box">2</div>
          <div class="box">3</div>
          <div class="box">4</div>
          <div class="box">5</div>
        </div>
      </div>
      <div class="spacing-example">
        <h3 class="h6">Stack</h3>
        <div class="stack">
          <div class="box">1</div>
          <div class="box">2</div>
          <div class="box">3</div>
          <div class="box">4</div>
        </div>
      </div>
      <div class="spacing-example">
        <h3 class="h6">Separate</h3>
        <div class="separate">
          <div class="box">1</div>
          <div class="box">2</div>
        </div>
      </div>
      <div class="spacing-example">
        <h3 class="h6">Space</h3>
        <div class="space">
          <div class="box">1</div>
          <div class="box">2</div>
          <div class="box">3</div>
          <div class="box">4</div>
          <div class="box">5</div>
        </div>
      </div>
    </Fragment>
  </ComponentOption>
  <ComponentOption name="Density">
    <Fragment slot="details">
      <p>
        You can optionally add one of the following modifier classes to change
        the spacing between children:
      </p>
      <ul>
        <li><code>densest</code></li>
        <li><code>denser</code></li>
        <li><code>dense</code></li>
        <li><code>sparse</code></li>
        <li><code>sparser</code></li>
        <li><code>sparsest</code></li>
      </ul>
      <p>By default, layouts have a density in between dense and sparse.</p>
    </Fragment>
    <Fragment slot="examples">
      <div class="density-example">
        <h3 class="h6">Densest</h3>
        <div class="flow densest">
          <div class="box">1</div>
          <div class="box">2</div>
          <div class="box">3</div>
        </div>
      </div>
      <div class="density-example">
        <h3 class="h6">Denser</h3>
        <div class="flow denser">
          <div class="box">1</div>
          <div class="box">2</div>
          <div class="box">3</div>
        </div>
      </div>
      <div class="density-example">
        <h3 class="h6">Dense</h3>
        <div class="flow dense">
          <div class="box">1</div>
          <div class="box">2</div>
          <div class="box">3</div>
        </div>
      </div>
      <div class="density-example">
        <h3 class="h6">Default</h3>
        <div class="flow">
          <div class="box">1</div>
          <div class="box">2</div>
          <div class="box">3</div>
        </div>
      </div>
      <div class="density-example">
        <h3 class="h6">Sparse</h3>
        <div class="flow sparse">
          <div class="box">1</div>
          <div class="box">2</div>
          <div class="box">3</div>
        </div>
      </div>
      <div class="density-example">
        <h3 class="h6">Sparser</h3>
        <div class="flow sparser">
          <div class="box">1</div>
          <div class="box">2</div>
          <div class="box">3</div>
        </div>
      </div>
      <div class="density-example">
        <h3 class="h6">Sparsest</h3>
        <div class="flow sparsest">
          <div class="box">1</div>
          <div class="box">2</div>
          <div class="box">3</div>
        </div>
      </div>
    </Fragment>
  </ComponentOption>
  <ComponentOption name="Orientation">
    <Fragment slot="details">
      <p>
        You can optionally add one of the following modifier classes to change
        the axis along which the children are laid out:
      </p>
      <ul>
        <li>
          <code>horizontal</code>, or the synonym <code>horizontally</code>
        </li>
        <li><code>vertical</code>, or the synonym <code>vertically</code></li>
      </ul>
      <p>
        In either case, the two <q>synonym</q> classes are equivalent. Use whatever
        is the most readable in your situation.
      </p>
      <p>By default, layouts are horizontal.</p>
    </Fragment>
    <Fragment slot="examples">
      <div class="orientation-example">
        <h3 class="h6">Horizontal</h3>
        <div class="stack horizontally">
          <div class="box">1</div>
          <div class="box">2</div>
          <div class="box">3</div>
        </div>
      </div>
      <div class="orientation-example">
        <h3 class="h6">Vertical</h3>
        <div class="stack vertically">
          <div class="box">1</div>
          <div class="box">2</div>
          <div class="box">3</div>
        </div>
      </div>
    </Fragment>
  </ComponentOption>
</ComponentDocs>
<style>
  .spacing-example,
  .density-example,
  .orientation-example {
    display: block;
    width: 100%;
  }

  .spacing-example :is(.flow, .stack, .separate, .space) {
    width: 16rem;
    background: var(--color-brand-5);
    padding: 0.5rem;
  }

  .box {
    background: var(--color-gray-9);
    border: var(--border-s) solid var(--color-outline);
    color: var(--color-gray-1);
    width: 4rem;
    height: 4rem;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-s);
    flex: none;
  }
</style>
