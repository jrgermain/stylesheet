%flex-layout {
  display: flex;
  gap: var(--space-s);

  &.densest {
    gap: var(--space-3xs);
  }

  &.denser {
    gap: var(--space-2xs);
  }

  &.dense {
    gap: var(--space-xs);
  }

  &.sparse {
    gap: var(--space-m);
  }

  &.sparser {
    gap: var(--space-l);
  }

  &.sparsest {
    gap: var(--space-xl);
  }

  &.horizontal,
  &.horizontally {
    flex-direction: row;
  }

  &.vertical,
  &.vertically {
    flex-direction: column;
  }
}

.flow {
  @extend %flex-layout;

  flex-wrap: wrap;
  align-items: center;
  justify-content: start;
}

.stack {
  @extend %flex-layout;

  flex-wrap: nowrap;
  align-items: stretch;
  justify-content: start;
}

.separate {
  @extend %flex-layout;

  flex-wrap: nowrap;
  align-items: center;
  justify-content: space-between;
}

.space {
  @extend %flex-layout;

  flex-wrap: wrap;
  align-items: center;
  justify-content: space-around;
}

:is(form, .form, .text-container):not(.no-max-width) {
  max-width: 60ch;
}

%visually-hidden {
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
  height: 1px;
  width: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
}
