@use "../functions";

.field {
  display: inline-flex;
  flex-direction: column;
  line-height: 1;
  gap: var(--space-3xs);
  color: var(--color-body-text);
  font-weight: var(--font-weight-semibold);
  transition-duration: 200ms;
  transition-property: color, box-shadow;
  transition-timing-function: ease;

  &:focus-within {
    color: var(--color-brand-5);
  }

  &:has(:user-invalid, &[aria-invalid="true"]) {
    color: var(--color-red-5);

    .error-message {
      opacity: 1;
    }
  }

  &:user-invalid {
    color: var(--color-red-5);
  }

  input:not(
      [type="button"],
      [type="checkbox"],
      [type="file"],
      [type="hidden"],
      [type="image"],
      [type="radio"],
      [type="range"],
      [type="reset"],
      [type="submit"]
    ),
  select,
  textarea {
    color: var(--color-body-text);
    background-color: white;
    border: var(--border-s) solid var(--color-outline);
    font-size: 1rem;
    padding: var(--space-2xs);
    margin-block-start: 2px;
    border-radius: var(--radius-m);
    transition-duration: 200ms;
    transition-property: color, box-shadow, border-color;
    transition-timing-function: ease;
    font-family: var(--font-family-ui);

    @media (prefers-color-scheme: dark) {
      background-color: black;
    }

    &:focus {
      outline: 0;
      border-color: var(--color-brand-5);
      box-shadow:
        0 0 0 1px var(--color-brand-5),
        0 0 0 3px var(--color-brand-transparent);
    }

    &:disabled {
      opacity: 0.7;
      cursor: not-allowed;
    }

    // Not using :read-only because it matches additional elements (e.g., every color input)
    &[readonly] {
      cursor: not-allowed;

      &:focus {
        outline: 0;
        border-color: var(--color-gray-5);
        box-shadow:
          0 0 0 1px var(--color-gray-5),
          0 0 0 3px var(--color-gray-transparent);
      }
    }

    &:user-invalid,
    &[aria-invalid="true"] {
      border-color: var(--color-red-5);
      box-shadow: 0 0 0 1px var(--color-red-5);

      &:focus {
        outline: 0;
        border-color: var(--color-red-5);
        box-shadow:
          0 0 0 1px var(--color-red-5),
          0 0 0 3px var(--color-red-transparent);
      }
    }
  }

  input[type="color"] {
    inline-size: auto;
    block-size: auto;
    cursor: pointer;

    &::-webkit-color-swatch-wrapper {
      padding: 0;
    }

    &::-webkit-color-swatch {
      border: 0;
      block-size: 1rem;
      inline-size: 1.62rem;
      border-radius: var(--radius-s);
    }

    &::-moz-color-swatch {
      border: 0;
      block-size: 1rem;
      inline-size: 1.62rem;
      border-radius: var(--radius-s);
    }
  }

  select {
    background-image: #{functions.svg-to-data-url(
        '<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="none" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="m6 9l6 6l6-6"/></svg>'
      )};
    background-position: center right 0.25em;
    background-size: auto 75%;
    background-repeat: no-repeat;
    cursor: pointer;
    appearance: none;
    padding-inline-end: calc(2 * var(--space-2xs) + 1em);

    @media (prefers-color-scheme: dark) {
      background-image: #{functions.svg-to-data-url(
          '<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="none" stroke="white" stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="m6 9l6 6l6-6"/></svg>'
        )};
    }

    &:dir(rtl) {
      background-position: center left 0.25em;
    }
  }

  .help-text {
    font-size: 0.9em;
    color: var(--color-body-text-alt);
    font-weight: var(--font-weight-normal);
    margin: -0.25em 0 0;
    position: relative;
  }

  .error-message {
    transition: opacity 200ms ease;
    opacity: 0;
    font-size: 0.9em;
    border: 0;
    padding: 0;
    margin: 0;
    font-weight: var(--font-weight-semibold);
    display: flex;
    align-items: center;
    gap: 2px;

    &::before {
      content: "";
      mask-image: #{functions.svg-to-data-url(
          '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 256 256"><path fill="#888888" d="M128 24a104 104 0 1 0 104 104A104.11 104.11 0 0 0 128 24m37.66 130.34a8 8 0 0 1-11.32 11.32L128 139.31l-26.34 26.35a8 8 0 0 1-11.32-11.32L116.69 128l-26.35-26.34a8 8 0 0 1 11.32-11.32L128 116.69l26.34-26.35a8 8 0 0 1 11.32 11.32L139.31 128Z"/></svg>'
        )};
      mask-size: contain;
      mask-repeat: no-repeat;
      mask-position: center;
      background-color: currentcolor;
      display: inline-block;
      height: 1.2em;
      width: 1.2em;
    }
  }
}

fieldset {
  border: var(--border-s) solid var(--color-outline);
  border-radius: var(--radius-l);

  legend {
    color: var(--color-body-text);
    font-weight: var(--font-weight-semibold);
  }
}

input[type="checkbox"],
input[type="radio"] {
  accent-color: var(--color-brand-5);
}
