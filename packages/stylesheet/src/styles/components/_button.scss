@use "./text";

:is(
    button,
    .button,
    input[type="button"],
    input[type="submit"],
    input[type="reset"]
  ):not(.chip, .card, .chip .delete) {
  @include text.all-caps;

  --button-shadow: var(--shadow-s);
  --button-hover-bg-color: var(--button-border-color);

  box-sizing: border-box;
  display: inline-flex;
  outline: 0;
  padding-inline: 1em;
  padding-block: 0.75em;
  gap: 0.5em;
  border-style: solid;
  transform: scale(1);
  transition-property: box-shadow, background-color, transform, opacity;
  transition-duration: 200ms;
  transition-timing-function: ease;
  text-decoration: none;
  position: relative;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  cursor: pointer;
  border-width: var(--border-s);
  border-radius: var(--radius-m);
  min-height: 2.6em;
  min-width: 3em;
  line-height: 1;
  font-family: var(--font-family-ui);
  box-shadow: var(--button-shadow);
  user-select: none;
  font-size: 1rem;

  &::before {
    content: "";
    background-color: var(--button-hover-bg-color);
    position: absolute;
    inset: 0;
    margin: auto;
    transition-property: opacity, width, height, border-radius;
    transition-duration: 200ms;
    transition-timing-function: ease;
    z-index: -1;
    border-radius: 2em;
    width: 4em;
    height: 4em;
    opacity: 0;
  }

  &:is(:focus-visible, .focus) {
    box-shadow:
      var(--button-shadow),
      0 0 0 0.2em var(--button-focus-ring-color);
  }

  &:is(:active, .active) {
    transform: scale(0.98);

    // On low-resolution screens, the scale effect makes text jump
    // around awkwardly, so we use an alternative.
    @media screen and (resolution < 2x) {
      transform: translateY(1px);
    }
  }

  &:is(:hover, .hover) {
    text-decoration: none;

    &::before {
      opacity: 1;
      width: 100%;
      height: 100%;
      border-radius: calc(var(--radius-m) - var(--border-s));
    }
  }

  color: var(--button-fg-color);
  background-color: var(--button-bg-color);
  border-color: var(--button-border-color);
  font-weight: var(--button-font-weight);

  &.primary {
    --button-fg-color: white;
    --button-bg-color: var(--color-brand-5);
    --button-border-color: var(--color-brand-4);
    --button-font-weight: var(--font-weight-semibold);
    --button-focus-ring-color: var(--color-brand-transparent);

    @each $color
      in ("red", "orange", "yellow", "green", "sky", "blue", "purple", "gray")
    {
      &.#{$color} {
        --button-bg-color: var(--color-#{$color}-5);
        --button-border-color: var(--color-#{$color}-4);
        --button-focus-ring-color: var(--color-#{$color}-transparent);
      }
    }
  }

  // .secondary, default
  &:not(.primary, .subtle, .close-button) {
    --button-fg-color: var(--color-body-text);
    --button-bg-color: var(--color-gray-8);
    --button-border-color: var(--color-gray-7);
    --button-font-weight: var(--font-weight-normal);
    --button-focus-ring-color: var(--color-gray-transparent);
  }

  &.subtle {
    --button-fg-color: var(--color-brand-4);
    --button-bg-color: transparent;
    --button-border-color: transparent;
    --button-hover-bg-color: var(--color-brand-extra-transparent);
    --button-font-weight: var(--font-weight-bold);
    --button-focus-ring-color: transparent;
    --button-shadow: none;

    &:is(:focus-visible, .focus) {
      --button-bg-color: var(--color-brand-transparent);
      --button-hover-bg-color: transparent;
    }
  }

  &.small {
    font-size: 0.7rem;
  }

  &.large {
    font-size: 1.3rem;
  }

  &.icon {
    border-radius: var(--radius-full);
    padding-inline: 0.5em;
    padding-block: 0.5em;
    min-width: 0;
    min-height: 0;
    aspect-ratio: 1;

    &::before {
      width: 75%;
      height: 75%;
    }

    &:is(:hover, .hover)::before {
      width: 100%;
      height: 100%;
      border-radius: 100%;
    }
  }

  &:is(:disabled, .disabled, [aria-disabled="true"]) {
    opacity: 0.7;
    cursor: not-allowed;
    transform: scale(1);

    &:is(:hover, .hover)::before {
      opacity: 0;
    }
  }

  &.loading {
    cursor: wait;

    &::before {
      opacity: 1 !important;
      height: 100% !important;
      border-radius: inherit !important;
      animation: button-loading-bg 1200ms ease-in-out infinite forwards;
    }
  }
}

@keyframes button-loading-bg {
  0% {
    width: 0;
    margin: 0 auto 0 0;
  }

  50% {
    width: 100%;
  }

  100% {
    width: 0;
    margin: 0 0 0 auto;
  }
}
