.field {
  --field-gap: var(--space-2xs);
  --field-padding: 0.5em;
  --field-radius: var(--radius-m);

  display: inline-flex;
  flex-direction: column;
  line-height: 1;
  gap: var(--field-gap);
  color: var(--color-body-text);
  font-weight: var(--font-weight-semibold);
  transition-property: color, box-shadow;
  transition-duration: var(--duration-medium);
  transition-timing-function: var(--ease-default);
  font-size: var(--font-size-m);
  font-family: var(--font-family-body);

  &.compact,
  .fieldset.compact & {
    --field-gap: calc(0.9 * var(--space-2xs));
    --field-padding: 0.33em;
    --field-radius: var(--radius-s);

    font-size: calc(0.9 * var(--font-size-m));
  }

  &:focus-within {
    color: var(--color-brand-5);
  }

  &:has(:user-invalid, [aria-invalid="true"]) {
    color: var(--color-red-5);

    .error-message {
      opacity: 1;
    }
  }

  &:has([readonly]):focus-within {
    color: var(--color-gray-5);
  }

  input:not(
      [type="button"],
      [type="checkbox"],
      [type="file"],
      [type="hidden"],
      [type="image"],
      [type="radio"],
      [type="range"],
      [type="reset"],
      [type="submit"]
    ),
  select,
  textarea {
    color: var(--color-body-text);
    background-color: light-dark(white, black);
    border: var(--border-s) solid var(--color-outline);
    font-size: 1em;
    padding: var(--field-padding);
    border-radius: var(--field-radius);
    transition-property: color, box-shadow, border-color;
    transition-duration: var(--duration-medium);
    transition-timing-function: var(--ease-default);
    font-family: inherit;

    &:focus {
      outline: 0;
      border-color: var(--color-brand-5);
      box-shadow:
        0 0 0 0.1em var(--color-brand-5),
        0 0 0 calc(0.2em + var(--border-s)) var(--color-brand-transparent);
    }

    &:focus-visible {
      outline: 0;
    }

    &:disabled {
      opacity: var(--opacity-disabled);
      cursor: not-allowed;
    }

    /* Not using :read-only because it matches additional elements (e.g., every color input) */
    &[readonly] {
      border-style: dashed;

      &:focus {
        outline: 0;
        border-style: solid;
        border-color: var(--color-gray-5);
        box-shadow:
          0 0 0 0.1em var(--color-gray-5),
          0 0 0 calc(0.2em + var(--border-s)) var(--color-gray-transparent);
      }
    }

    &:user-invalid,
    &[aria-invalid="true"] {
      border-color: var(--color-red-5);
      box-shadow: 0 0 0 0.1em var(--color-red-5);

      &:focus {
        outline: 0;
        border-color: var(--color-red-5);
        box-shadow:
          0 0 0 0.1em var(--color-red-5),
          0 0 0 calc(0.2em + var(--border-s)) var(--color-red-transparent);
      }
    }
  }

  input[type="color"] {
    inline-size: auto;
    block-size: auto;
    cursor: pointer;

    &::-webkit-color-swatch-wrapper {
      padding: 0;
    }

    &::-webkit-color-swatch {
      border: 0;
      block-size: 1em;
      inline-size: 1.62em;
      border-radius: var(--radius-s);
    }

    &::-moz-color-swatch {
      border: 0;
      block-size: 1em;
      inline-size: 1.62em;
      border-radius: var(--radius-s);
    }
  }

  select {
    background-image: light-dark(
      url("@/src/svg/dropdown.svg"),
      url("@/src/svg/dropdown-invert.svg")
    );
    background-position: center right 0.25em;
    background-size: auto 75%;
    background-repeat: no-repeat;
    cursor: pointer;
    appearance: none;
    padding-inline-end: calc(2 * var(--space-2xs) + 1em);

    &:dir(rtl) {
      background-position: center left 0.25em;
    }
  }

  .help-text {
    font-size: 0.9em;
    color: var(--color-body-text-alt);
    font-weight: var(--font-weight-normal);
    margin: -0.25em 0 0;
    position: relative;
  }

  .error-message {
    transition-property: opacity;
    transition-duration: var(--duration-medium);
    transition-timing-function: var(--ease-default);
    opacity: 0;
    font-size: 0.9em;
    border: 0;
    padding: 0;
    margin: 0;
    font-weight: var(--font-weight-semibold);
    display: flex;
    align-items: center;
    gap: 2px;

    &::before {
      content: "";
      mask-image: url("@/src/svg/x-circle.svg");
      mask-size: contain;
      mask-repeat: no-repeat;
      mask-position: center;
      background-color: currentcolor;
      display: inline-block;
      height: 1.2em;
      width: 1.2em;
    }
  }

  .input-group {
    display: flex;
    flex-direction: row;
    align-items: stretch;

    > * {
      border-radius: 0 !important;
      z-index: 1;
    }

    > :is(:user-invalid, [aria-invalid="true"]) {
      z-index: 2;
    }

    > :first-child {
      border-start-start-radius: var(--field-radius) !important;
      border-end-start-radius: var(--field-radius) !important;
    }

    > :last-child {
      border-end-end-radius: var(--field-radius) !important;
      border-start-end-radius: var(--field-radius) !important;
    }

    > :focus-visible {
      z-index: 3;
    }

    > :is(.prefix, .suffix, .action) {
      user-select: none;
      -webkit-user-drag: none;
      display: flex;
      font-weight: var(--font-weight-normal);
      color: var(--color-gray-3);
      background-color: var(--color-gray-9);
      border: var(--border-s) solid var(--color-outline);
      padding: var(--field-padding) calc(2 * var(--field-padding));
      align-items: center;
      justify-content: center;
      font-size: 0.9em;

      :is(img, svg) {
        height: 1.15em;
        width: auto;
      }
    }

    > .prefix {
      border-inline-end: 0;
    }

    > .suffix {
      border-inline-start: 0;
    }

    > .action {
      cursor: pointer;
      color: var(--color-brand-3);
      border-inline-start: 0;
      transition-property: box-shadow, background-color;
      transition-duration: var(--duration-medium);
      transition-timing-function: var(--ease-default);

      &:hover {
        background-color: var(--color-gray-8);
      }

      &:active {
        background-color: var(--color-gray-7);
      }

      &:focus-visible {
        border-color: var(--color-brand-5);
        border-inline-start-width: var(--border-s);
        border-inline-start-style: solid;
        box-shadow:
          0 0 0 0.11em var(--color-brand-5),
          0 0 0 calc(0.22em + var(--border-s)) var(--color-brand-transparent);
        outline: 0;
      }
    }

    > :is(input, select, textarea) {
      width: 100%;

      &:has(~ .action:focus-visible) {
        border-inline-end-width: 0;
      }
    }
  }
}

input[type="checkbox"],
input[type="radio"] {
  accent-color: var(--color-brand-5);
}

fieldset.fieldset {
  border: var(--border-s) solid var(--color-outline);
  border-radius: var(--radius-s);
  background-color: var(--color-body);
  color: var(--color-body-text);

  legend {
    font-family: var(--font-family-heading);
    font-weight: var(--font-weight-bold);
    transition-property: color;
    transition-duration: var(--duration-medium);
    transition-timing-function: var(--ease-default);
  }

  &:focus-within legend {
    color: var(--color-brand-5);
  }
}

.form {
  max-width: 60ch;
  margin-inline-end: auto;
}
