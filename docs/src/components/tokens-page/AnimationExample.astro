---
interface Props {
  easingFunctionName: string;
}

const { easingFunctionName } = Astro.props;

const easingFunctionFriendlyName = easingFunctionName
  .replace(/-/g, " ")
  .replace(/\b\w/g, (char) => char.toUpperCase());

const easingFunctionVariable = `var(--ease-${easingFunctionName})`;
---

<div class="container card">
  <div class="card-title">
    {easingFunctionFriendlyName}
  </div>
  <div class="variable-name-wrapper">
    <div class="code">{easingFunctionVariable}</div>
  </div>
  <div class="description"><slot /></div>
  <div class="track-wrapper">
    <div class="track"></div>
    <div
      class="ball"
      style={{ animationTimingFunction: easingFunctionVariable }}
    >
    </div>
  </div>
</div>
<style>
  .container {
    width: 100%;
    position: relative;
  }

  .variable-name-wrapper {
    margin-block-start: calc(-1 * var(--space-2xs)) !important;
    margin-block-end: var(--space-2xs) !important;
  }

  .description {
    margin-block-end: var(--space-xs) !important;
  }

  .track-wrapper {
    width: 100%;
    height: 2rem;
    position: relative;
  }

  .track {
    width: calc(100% - 1.25rem);
    height: var(--border-m);
    background: var(--color-border);
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    left: 0.625rem;
    border-radius: var(--radius-full);
  }

  .ball {
    width: 1.25rem;
    height: 1.25rem;
    background: var(--color-brand-5);
    border-radius: 50%;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    animation: ball-animation 2s infinite;
  }

  @keyframes ball-animation {
    0% {
      left: 0;
    }
    100% {
      left: calc(100% - 1.25rem);
    }
  }
</style>
